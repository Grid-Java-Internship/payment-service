plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.sonarqube' version '4.0.0.2929'
}

group = 'com.internship'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

bootJar {
	enabled = true
	archiveFileName = 'app.jar'
	archiveClassifier = ''
}

jar {
	enabled = false
}

repositories {
	mavenCentral()
	maven {
		name = "GitHubPackages"
		url = uri("https://maven.pkg.github.com/Grid-Java-Internship/maven-libraries")
		credentials {
			username = System.getenv("GITHUB_USER")
			password = System.getenv("GITHUB_TOKEN")
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation("org.springframework.boot:spring-boot-starter-validation:3.4.4")
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.mapstruct:mapstruct:1.6.3'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.2.1'
	implementation 'org.mockito:mockito-core:5.14.2'
	implementation 'org.junit.jupiter:junit-jupiter:5.11.4'
	implementation 'com.internship:authentication_library:0.2.9-SNAPSHOT'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.2.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}